/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Wallet, WalletInterface } from "../Wallet";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "CallExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ERC20Transfered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ERC721Transfered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ETHTransfered",
    type: "event",
  },
  {
    inputs: [],
    name: "ERC721_RECEIVED",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "call",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "contractAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "contractFactory",
    outputs: [
      {
        internalType: "contract IContractFactory",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IContractFactory",
        name: "_contractFactory",
        type: "address",
      },
      {
        internalType: "address",
        name: "_contractAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "sendERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC721",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "sendERC721",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "sendEth",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506001600055610ce8806100256000396000f3fe6080604052600436106100b55760003560e01c80637c7acba611610069578063b72ac8ea1161004e578063b72ac8ea1461022f578063ecc98ce41461024f578063f6b4dfb41461026a57600080fd5b80637c7acba6146101d75780638f975a641461020f57600080fd5b806317d70f7c1161009a57806317d70f7c1461018057806349dcbc5e146101a45780636dbf2fa0146101c457600080fd5b8063150b7a02146100c15780631794bb3c1461012357600080fd5b366100bc57005b600080fd5b3480156100cd57600080fd5b506100ed6100dc366004610b13565b630a85bd0160e11b95945050505050565b6040517fffffffff0000000000000000000000000000000000000000000000000000000090911681526020015b60405180910390f35b61017e610131366004610b86565b600180546001600160a01b039485167fffffffffffffffffffffffff0000000000000000000000000000000000000000918216179091556002805493909416921691909117909155600355565b005b34801561018c57600080fd5b5061019660035481565b60405190815260200161011a565b3480156101b057600080fd5b5061017e6101bf366004610bc7565b61028a565b61017e6101d2366004610bf3565b61041d565b3480156101e357600080fd5b506001546101f7906001600160a01b031681565b6040516001600160a01b03909116815260200161011a565b34801561021b57600080fd5b5061017e61022a366004610b86565b61057b565b34801561023b57600080fd5b5061017e61024a366004610b86565b61079c565b34801561025b57600080fd5b506100ed630a85bd0160e11b81565b34801561027657600080fd5b506002546101f7906001600160a01b031681565b6002546003546040516331a9108f60e11b81526001600160a01b0390921691636352211e916102bf9160040190815260200190565b60206040518083038186803b1580156102d757600080fd5b505afa1580156102eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061030f9190610c4f565b6001600160a01b0316336001600160a01b03161461037e5760405162461bcd60e51b815260206004820152602160248201527f4e46544e533a2043616c6c6572206973206e6f7420746f6b656e20686f6c64656044820152603960f91b60648201526084015b60405180910390fd5b600260005414156103d15760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610375565b60026000556040518181526001600160a01b038316907fa1d3396ca9c3273bb83b684217f50dc5ef7ff7d4a33667ff922a9e30692b0bf99060200160405180910390a250506001600055565b6002546003546040516331a9108f60e11b81526001600160a01b0390921691636352211e916104529160040190815260200190565b60206040518083038186803b15801561046a57600080fd5b505afa15801561047e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104a29190610c4f565b6001600160a01b0316336001600160a01b03161461050c5760405162461bcd60e51b815260206004820152602160248201527f4e46544e533a2043616c6c6572206973206e6f7420746f6b656e20686f6c64656044820152603960f91b6064820152608401610375565b6002600054141561055f5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610375565b600260005561057084848484610990565b505060016000555050565b6002546003546040516331a9108f60e11b81526001600160a01b0390921691636352211e916105b09160040190815260200190565b60206040518083038186803b1580156105c857600080fd5b505afa1580156105dc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106009190610c4f565b6001600160a01b0316336001600160a01b03161461066a5760405162461bcd60e51b815260206004820152602160248201527f4e46544e533a2043616c6c6572206973206e6f7420746f6b656e20686f6c64656044820152603960f91b6064820152608401610375565b600260005414156106bd5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610375565b600260005560405163a9059cbb60e01b81526001600160a01b0383811660048301526024820183905284169063a9059cbb90604401602060405180830381600087803b15801561070c57600080fd5b505af1158015610720573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107449190610c73565b50816001600160a01b0316836001600160a01b03167f3f4b553febc085a81c336a0cb96b813783730dce6ccd11241fc1481c45d6d8898360405161078a91815260200190565b60405180910390a35050600160005550565b6002546003546040516331a9108f60e11b81526001600160a01b0390921691636352211e916107d19160040190815260200190565b60206040518083038186803b1580156107e957600080fd5b505afa1580156107fd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108219190610c4f565b6001600160a01b0316336001600160a01b03161461088b5760405162461bcd60e51b815260206004820152602160248201527f4e46544e533a2043616c6c6572206973206e6f7420746f6b656e20686f6c64656044820152603960f91b6064820152608401610375565b600260005414156108de5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610375565b60026000556040516323b872dd60e01b81523060048201526001600160a01b038381166024830152604482018390528416906323b872dd90606401600060405180830381600087803b15801561093357600080fd5b505af1158015610947573d6000803e3d6000fd5b50505050816001600160a01b0316836001600160a01b03167f9bdd79e6a736d7abd341e1cec01b3d92abb5c036177d31b0187c7cb0826cafd18360405161078a91815260200190565b6000846001600160a01b03168484846040516109ad929190610c95565b60006040518083038185875af1925050503d80600081146109ea576040519150601f19603f3d011682016040523d82523d6000602084013e6109ef565b606091505b5050905080610a665760405162461bcd60e51b815260206004820152602d60248201527f4e46544e532057616c6c65743a20756e6465726c79696e67207472616e73616360448201527f74696f6e207265766572746564000000000000000000000000000000000000006064820152608401610375565b846001600160a01b03167f7aa5ed2c76d4b9b3e8cbc2d86e798d468acf8cc22876dbfe0b62ea3180006c26858585604051610aa393929190610ca5565b60405180910390a25050505050565b6001600160a01b0381168114610ac757600080fd5b50565b60008083601f840112610adc57600080fd5b50813567ffffffffffffffff811115610af457600080fd5b602083019150836020828501011115610b0c57600080fd5b9250929050565b600080600080600060808688031215610b2b57600080fd5b8535610b3681610ab2565b94506020860135610b4681610ab2565b935060408601359250606086013567ffffffffffffffff811115610b6957600080fd5b610b7588828901610aca565b969995985093965092949392505050565b600080600060608486031215610b9b57600080fd5b8335610ba681610ab2565b92506020840135610bb681610ab2565b929592945050506040919091013590565b60008060408385031215610bda57600080fd5b8235610be581610ab2565b946020939093013593505050565b60008060008060608587031215610c0957600080fd5b8435610c1481610ab2565b935060208501359250604085013567ffffffffffffffff811115610c3757600080fd5b610c4387828801610aca565b95989497509550505050565b600060208284031215610c6157600080fd5b8151610c6c81610ab2565b9392505050565b600060208284031215610c8557600080fd5b81518015158114610c6c57600080fd5b8183823760009101908152919050565b83815260406020820152816040820152818360608301376000818301606090810191909152601f909201601f191601019291505056fea164736f6c6343000809000a";

type WalletConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WalletConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Wallet__factory extends ContractFactory {
  constructor(...args: WalletConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Wallet> {
    return super.deploy(overrides || {}) as Promise<Wallet>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Wallet {
    return super.attach(address) as Wallet;
  }
  connect(signer: Signer): Wallet__factory {
    return super.connect(signer) as Wallet__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WalletInterface {
    return new utils.Interface(_abi) as WalletInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Wallet {
    return new Contract(address, _abi, signerOrProvider) as Wallet;
  }
}
