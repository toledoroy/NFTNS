/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Wallet, WalletInterface } from "../Wallet";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "enum Enum.Operation",
        name: "operation",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "gas",
        type: "uint256",
      },
    ],
    name: "CallExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ERC20Transfered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ERC721Transfered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ETHTransfered",
    type: "event",
  },
  {
    inputs: [],
    name: "ERC721_RECEIVED",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "enum Enum.Operation",
        name: "operation",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "txGas",
        type: "uint256",
      },
    ],
    name: "call",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "contractFactory",
    outputs: [
      {
        internalType: "contract IContractFactory",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IContractFactory",
        name: "_contractFactory",
        type: "address",
      },
      {
        internalType: "address",
        name: "_contractAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "selfContractAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "selfTokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "sendERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC721",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "sendERC721",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "sendEth",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506001600055610d75806100256000396000f3fe6080604052600436106100b55760003560e01c80638f975a6411610069578063df5cf9b61161004e578063df5cf9b61461022c578063ecc98ce41461023f578063f062791e1461025a57600080fd5b80638f975a64146101ec578063b72ac8ea1461020c57600080fd5b806349dcbc5e1161009a57806349dcbc5e146101745780637c7acba61461019457806387c58610146101cc57600080fd5b8063150b7a02146100c15780631794bb3c1461011757600080fd5b366100bc57005b600080fd5b3480156100cd57600080fd5b506100e16100dc366004610b4a565b61027e565b6040517fffffffff0000000000000000000000000000000000000000000000000000000090911681526020015b60405180910390f35b610172610125366004610bbd565b600180546001600160a01b039485167fffffffffffffffffffffffff0000000000000000000000000000000000000000918216179091556002805493909416921691909117909155600355565b005b34801561018057600080fd5b5061017261018f366004610bfe565b610290565b3480156101a057600080fd5b506001546101b4906001600160a01b031681565b6040516001600160a01b03909116815260200161010e565b3480156101d857600080fd5b506002546101b4906001600160a01b031681565b3480156101f857600080fd5b50610172610207366004610bbd565b6103ef565b34801561021857600080fd5b50610172610227366004610bbd565b61054b565b61017261023a366004610c2a565b61069d565b34801561024b57600080fd5b506100e1630a85bd0160e11b81565b34801561026657600080fd5b5061027060035481565b60405190815260200161010e565b630a85bd0160e11b5b95945050505050565b6002546003546040516331a9108f60e11b81526001600160a01b0390921691636352211e916102c59160040190815260200190565b60206040518083038186803b1580156102dd57600080fd5b505afa1580156102f1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103159190610caa565b6001600160a01b0316336001600160a01b0316146103845760405162461bcd60e51b815260206004820152602160248201527f4e46544e533a2043616c6c6572206973206e6f7420746f6b656e20686f6c64656044820152603960f91b60648201526084015b60405180910390fd5b600260005414156103d75760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161037b565b60026000556103e682826108da565b50506001600055565b6002546003546040516331a9108f60e11b81526001600160a01b0390921691636352211e916104249160040190815260200190565b60206040518083038186803b15801561043c57600080fd5b505afa158015610450573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104749190610caa565b6001600160a01b0316336001600160a01b0316146104de5760405162461bcd60e51b815260206004820152602160248201527f4e46544e533a2043616c6c6572206973206e6f7420746f6b656e20686f6c64656044820152603960f91b606482015260840161037b565b600260005414156105315760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161037b565b6002600055610541838383610921565b5050600160005550565b6002546003546040516331a9108f60e11b81526001600160a01b0390921691636352211e916105809160040190815260200190565b60206040518083038186803b15801561059857600080fd5b505afa1580156105ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d09190610caa565b6001600160a01b0316336001600160a01b03161461063a5760405162461bcd60e51b815260206004820152602160248201527f4e46544e533a2043616c6c6572206973206e6f7420746f6b656e20686f6c64656044820152603960f91b606482015260840161037b565b6002600054141561068d5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161037b565b60026000556105418383836109f6565b6002546003546040516331a9108f60e11b81526001600160a01b0390921691636352211e916106d29160040190815260200190565b60206040518083038186803b1580156106ea57600080fd5b505afa1580156106fe573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107229190610caa565b6001600160a01b0316336001600160a01b03161461078c5760405162461bcd60e51b815260206004820152602160248201527f4e46544e533a2043616c6c6572206973206e6f7420746f6b656e20686f6c64656044820152603960f91b606482015260840161037b565b600260005414156107df5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161037b565b600260008190555061082c868686868080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250889250879150610aa39050565b6108845760405162461bcd60e51b815260206004820152602360248201527f4e46544e533a3a57414c4c45543a207478206661696c656420746f206578656360448201526275746560e81b606482015260840161037b565b856001600160a01b03167f3776149826c8cc529392d8987fc92f02fedfe97c017a3865eb9025f0ffb92da486868686866040516108c5959493929190610ce4565b60405180910390a25050600160005550505050565b816001600160a01b03167fa1d3396ca9c3273bb83b684217f50dc5ef7ff7d4a33667ff922a9e30692b0bf98260405161091591815260200190565b60405180910390a25050565b60405163a9059cbb60e01b81526001600160a01b0383811660048301526024820183905284169063a9059cbb90604401602060405180830381600087803b15801561096b57600080fd5b505af115801561097f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a39190610d46565b50816001600160a01b0316836001600160a01b03167f3f4b553febc085a81c336a0cb96b813783730dce6ccd11241fc1481c45d6d889836040516109e991815260200190565b60405180910390a3505050565b6040516323b872dd60e01b81523060048201526001600160a01b038381166024830152604482018390528416906323b872dd90606401600060405180830381600087803b158015610a4657600080fd5b505af1158015610a5a573d6000803e3d6000fd5b50505050816001600160a01b0316836001600160a01b03167f9bdd79e6a736d7abd341e1cec01b3d92abb5c036177d31b0187c7cb0826cafd1836040516109e991815260200190565b60006001836001811115610ab957610ab9610cce565b1415610ad2576000808551602087018986f49050610287565b600080855160208701888a87f19695505050505050565b6001600160a01b0381168114610afe57600080fd5b50565b60008083601f840112610b1357600080fd5b50813567ffffffffffffffff811115610b2b57600080fd5b602083019150836020828501011115610b4357600080fd5b9250929050565b600080600080600060808688031215610b6257600080fd5b8535610b6d81610ae9565b94506020860135610b7d81610ae9565b935060408601359250606086013567ffffffffffffffff811115610ba057600080fd5b610bac88828901610b01565b969995985093965092949392505050565b600080600060608486031215610bd257600080fd5b8335610bdd81610ae9565b92506020840135610bed81610ae9565b929592945050506040919091013590565b60008060408385031215610c1157600080fd5b8235610c1c81610ae9565b946020939093013593505050565b60008060008060008060a08789031215610c4357600080fd5b8635610c4e81610ae9565b955060208701359450604087013567ffffffffffffffff811115610c7157600080fd5b610c7d89828a01610b01565b909550935050606087013560028110610c9557600080fd5b80925050608087013590509295509295509295565b600060208284031215610cbc57600080fd5b8151610cc781610ae9565b9392505050565b634e487b7160e01b600052602160045260246000fd5b85815260806020820152836080820152838560a0830137600060a08583010152600060a0601f19601f870116830101905060028410610d3357634e487b7160e01b600052602160045260246000fd5b6040820193909352606001529392505050565b600060208284031215610d5857600080fd5b81518015158114610cc757600080fdfea164736f6c6343000809000a";

type WalletConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WalletConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Wallet__factory extends ContractFactory {
  constructor(...args: WalletConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Wallet> {
    return super.deploy(overrides || {}) as Promise<Wallet>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Wallet {
    return super.attach(address) as Wallet;
  }
  connect(signer: Signer): Wallet__factory {
    return super.connect(signer) as Wallet__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WalletInterface {
    return new utils.Interface(_abi) as WalletInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Wallet {
    return new Contract(address, _abi, signerOrProvider) as Wallet;
  }
}
