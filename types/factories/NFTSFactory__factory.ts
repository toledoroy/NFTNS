/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { NFTSFactory, NFTSFactoryInterface } from "../NFTSFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_implementation",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "NewImplementation",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "NewWallet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "NETWORK_DOMAIN_TYPE",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "deployWallet",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getWalletAddress",
    outputs: [
      {
        internalType: "address",
        name: "predictedAddress",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "implementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "updateImplementation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161093138038061093183398101604081905261002f916100ad565b6100383361005d565b600180546001600160a01b0319166001600160a01b03929092169190911790556100dd565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100bf57600080fd5b81516001600160a01b03811681146100d657600080fd5b9392505050565b610845806100ec6000396000f3fe60806040526004361061007b5760003560e01c8063ae7fa4a31161004e578063ae7fa4a314610112578063d217310e14610132578063db07bb5314610145578063f2fde38b1461018457600080fd5b8063025b22bc146100805780635c60da1b146100a2578063715018a6146100df5780638da5cb5b146100f4575b600080fd5b34801561008c57600080fd5b506100a061009b366004610742565b6101a4565b005b3480156100ae57600080fd5b506001546100c2906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156100eb57600080fd5b506100a0610264565b34801561010057600080fd5b506000546001600160a01b03166100c2565b34801561011e57600080fd5b506100c261012d36600461075d565b6102ca565b6100a061014036600461075d565b6102f4565b34801561015157600080fd5b506101776040518060400160405280600681526020016565697031353560d01b81525081565b6040516100d691906107d4565b34801561019057600080fd5b506100a061019f366004610742565b610459565b6000546001600160a01b031633146102035760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040519081527f6b70829fcbe4891157f7a7496f9870927de3c8237adbe9cd39bae09b7382c4099060200160405180910390a150565b6000546001600160a01b031633146102be5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101fa565b6102c8600061053b565b565b60006102eb6102d98484610598565b6001546001600160a01b0316906105f3565b90505b92915050565b61031061030183836102ca565b6001600160a01b03163b151590565b156103835760405162461bcd60e51b815260206004820152603360248201527f4e46544e533a206572722c20636f6e747261637420616c72656164792065786960448201527f737473206174207468697320616464726573730000000000000000000000000060648201526084016101fa565b60006103a46103928484610598565b6001546001600160a01b03169061066f565b6040516305e52ecf60e21b81523060048201526001600160a01b0385811660248301526044820185905291925090821690631794bb3c9034906064016000604051808303818588803b1580156103f957600080fd5b505af115801561040d573d6000803e3d6000fd5b50506040516001600160a01b038581168252869450871692507f6c2dedd3da3970de18095b000c2026dba4e53d35538b695a5c433abd5564e3ba915060200160405180910390a3505050565b6000546001600160a01b031633146104b35760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101fa565b6001600160a01b03811661052f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016101fa565b6105388161053b565b50565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006040518060400160405280600681526020016565697031353560d01b8152506105c04690565b84846040516020016105d594939291906107e7565b60405160208183030381529060405280519060200120905092915050565b60006102eb8383306040517f3d602d80600a3d3981f3363d3d373d3d3d363d730000000000000000000000008152606093841b60148201527f5af43d82803e903d91602b57fd5bf3ff000000000000000000000000000000006028820152921b6038830152604c8201526037808220606c830152605591012090565b60006040517f3d602d80600a3d3981f3363d3d373d3d3d363d7300000000000000000000000081528360601b60148201527f5af43d82803e903d91602b57fd5bf300000000000000000000000000000000006028820152826037826000f59150506001600160a01b0381166102ee5760405162461bcd60e51b815260206004820152601760248201527f455243313136373a2063726561746532206661696c656400000000000000000060448201526064016101fa565b80356001600160a01b038116811461073d57600080fd5b919050565b60006020828403121561075457600080fd5b6102eb82610726565b6000806040838503121561077057600080fd5b61077983610726565b946020939093013593505050565b6000815180845260005b818110156107ad57602081850181015186830182015201610791565b818111156107bf576000602083870101525b50601f01601f19169290920160200192915050565b6020815260006102eb6020830184610787565b60a0815260006107fa60a0830187610787565b82810360208085019190915260018252601d60f91b908201526040808401969096526001600160a01b0394909416606083015250608001520191905056fea164736f6c6343000809000a";

type NFTSFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NFTSFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NFTSFactory__factory extends ContractFactory {
  constructor(...args: NFTSFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _implementation: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<NFTSFactory> {
    return super.deploy(
      _implementation,
      overrides || {}
    ) as Promise<NFTSFactory>;
  }
  getDeployTransaction(
    _implementation: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_implementation, overrides || {});
  }
  attach(address: string): NFTSFactory {
    return super.attach(address) as NFTSFactory;
  }
  connect(signer: Signer): NFTSFactory__factory {
    return super.connect(signer) as NFTSFactory__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFTSFactoryInterface {
    return new utils.Interface(_abi) as NFTSFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NFTSFactory {
    return new Contract(address, _abi, signerOrProvider) as NFTSFactory;
  }
}
